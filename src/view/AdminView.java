package view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import helpers.Helpers;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EUserRole;
import model.Mechanic;
import model.Staff;
import model.Users;
import service.MechanicService;
import service.StaffService;
import service.UsersService;

/**
 *
 * @author busyDev
 */
public class AdminView extends javax.swing.JFrame {

    /**
     * Creates new form ModernDashboardLook
     */
    private Staff staff;

    public AdminView() {
        initComponents();
        view_data();
        addRoles();
    }

    public AdminView(Staff staff) {
        this.staff = staff;
        initComponents();
        view_data();
        addRoles();
        usernameLabel.setText(staff.getUsername());
    }

    Helpers helperMethods = new Helpers();
    private static Integer SERVER_PORT = 8000;
    Integer edited_user_id;
    Staff currentStaff;
    Mechanic currentMechanic;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        homeLabel = new javax.swing.JLabel();
        addUserLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        homeVeiw = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        userCountLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        fixedCarsLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        waitingCarsLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        notFixedCarsLabel = new javax.swing.JLabel();
        klsd = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        waitingCarsLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        notFixedCarsLabel1 = new javax.swing.JLabel();
        klsd1 = new javax.swing.JLabel();
        mechanicLabel = new javax.swing.JLabel();
        cashierLabel = new javax.swing.JLabel();
        UserManagementVeiw = new javax.swing.JPanel();
        roleComboBox = new javax.swing.JComboBox<>();
        deleteBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        resetFields = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fnameTextField = new javax.swing.JTextField();
        lnameTextField = new javax.swing.JTextField();
        usernameTextField = new javax.swing.JTextField();
        createBtn = new javax.swing.JButton();
        emailTextField = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        closeBtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("e-GARAGE");

        homeLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        homeLabel.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        homeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/home-light.png"))); // NOI18N
        homeLabel.setText("  Home");
        homeLabel.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        homeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeLabelMouseClicked(evt);
            }
        });

        addUserLabel.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        addUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        addUserLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addUserLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/add-user-light.png"))); // NOI18N
        addUserLabel.setText(" Manage Users");
        addUserLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserLabelMouseClicked(evt);
            }
        });

        logoutLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/logout_icon.png"))); // NOI18N
        logoutLabel.setText("Logout");
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/logo.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/user_icon_2.png"))); // NOI18N

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameLabel.setText("null");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoutLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel3))
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(homeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 670));

        jPanel4.setLayout(new java.awt.CardLayout());

        homeVeiw.setBackground(new java.awt.Color(245, 245, 245));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/users_ico.png"))); // NOI18N

        userCountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userCountLabel.setForeground(new java.awt.Color(0, 128, 128));
        userCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userCountLabel.setText("10 Users");

        usersTable.setForeground(new java.awt.Color(0, 51, 51));
        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Username", "First Name", "Last Name", "Email", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(usersTable);
        if (usersTable.getColumnModel().getColumnCount() > 0) {
            usersTable.getColumnModel().getColumn(0).setResizable(false);
            usersTable.getColumnModel().getColumn(2).setResizable(false);
            usersTable.getColumnModel().getColumn(3).setResizable(false);
            usersTable.getColumnModel().getColumn(4).setResizable(false);
        }

        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/refresh.png"))); // NOI18N
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        printBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        printBtn.setForeground(new java.awt.Color(0, 51, 51));
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/printing_icon.png"))); // NOI18N
        printBtn.setText("  Report");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 128, 128), 1, true));

        fixedCarsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        fixedCarsLabel.setForeground(new java.awt.Color(0, 128, 128));
        fixedCarsLabel.setText("10");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 128, 128));
        jLabel12.setText("Fixed");

        waitingCarsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        waitingCarsLabel.setForeground(new java.awt.Color(0, 96, 128));
        waitingCarsLabel.setText("10");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 96, 128));
        jLabel19.setText("Being Worked On");

        notFixedCarsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        notFixedCarsLabel.setForeground(new java.awt.Color(128, 0, 32));
        notFixedCarsLabel.setText("10");

        klsd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        klsd.setForeground(new java.awt.Color(128, 0, 32));
        klsd.setText("Not Fixed");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(fixedCarsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(waitingCarsLabel)))
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notFixedCarsLabel)
                    .addComponent(klsd))
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(notFixedCarsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(klsd))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(waitingCarsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fixedCarsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(245, 245, 245));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));

        waitingCarsLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        waitingCarsLabel1.setForeground(new java.awt.Color(0, 128, 128));
        waitingCarsLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/cashier_ico.png"))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 128, 128));
        jLabel20.setText("Cashiers");

        notFixedCarsLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        notFixedCarsLabel1.setForeground(new java.awt.Color(0, 128, 128));
        notFixedCarsLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/mechanic_ico.png"))); // NOI18N

        klsd1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        klsd1.setForeground(new java.awt.Color(0, 128, 128));
        klsd1.setText("Mechanics");

        mechanicLabel.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        mechanicLabel.setForeground(new java.awt.Color(0, 102, 102));
        mechanicLabel.setText("10");

        cashierLabel.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        cashierLabel.setForeground(new java.awt.Color(0, 102, 102));
        cashierLabel.setText("10");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(waitingCarsLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(cashierLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(notFixedCarsLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mechanicLabel)
                    .addComponent(klsd1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(mechanicLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(klsd1))
                        .addComponent(notFixedCarsLabel1))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(cashierLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel20))
                        .addComponent(waitingCarsLabel1)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout homeVeiwLayout = new javax.swing.GroupLayout(homeVeiw);
        homeVeiw.setLayout(homeVeiwLayout);
        homeVeiwLayout.setHorizontalGroup(
            homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeVeiwLayout.createSequentialGroup()
                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(homeVeiwLayout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(jLabel10))
                            .addGroup(homeVeiwLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(userCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(44, 44, 44)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(homeVeiwLayout.createSequentialGroup()
                                .addComponent(refreshBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(91, 91, 91))
            .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(homeVeiwLayout.createSequentialGroup()
                    .addGap(108, 108, 108)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(108, 108, 108)))
        );
        homeVeiwLayout.setVerticalGroup(
            homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeVeiwLayout.createSequentialGroup()
                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userCountLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10))
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(homeVeiwLayout.createSequentialGroup()
                    .addGap(219, 219, 219)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(221, Short.MAX_VALUE)))
        );

        jPanel4.add(homeVeiw, "card3");

        UserManagementVeiw.setBackground(new java.awt.Color(245, 245, 245));
        UserManagementVeiw.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roleComboBox.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        roleComboBox.setBorder(null);
        UserManagementVeiw.add(roleComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 386, 218, 37));

        deleteBtn.setBackground(new java.awt.Color(252, 252, 252));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        UserManagementVeiw.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 458, 110, 40));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Email");
        UserManagementVeiw.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 339, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Role");
        UserManagementVeiw.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 386, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Password");
        UserManagementVeiw.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 303, -1, -1));

        resetFields.setBackground(new java.awt.Color(252, 252, 252));
        resetFields.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resetFields.setText("Reset Fields");
        resetFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFieldsActionPerformed(evt);
            }
        });
        UserManagementVeiw.add(resetFields, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 110, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("First Name");
        UserManagementVeiw.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 166, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Last Name");
        UserManagementVeiw.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 214, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Username");
        UserManagementVeiw.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 262, -1, -1));

        fnameTextField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        fnameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        UserManagementVeiw.add(fnameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 167, 215, 29));

        lnameTextField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        lnameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        UserManagementVeiw.add(lnameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 215, 215, 29));

        usernameTextField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        usernameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        UserManagementVeiw.add(usernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 263, 215, 29));

        createBtn.setBackground(new java.awt.Color(252, 252, 252));
        createBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        createBtn.setText("Add User");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        UserManagementVeiw.add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 458, 120, 40));

        emailTextField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        emailTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        UserManagementVeiw.add(emailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 339, 215, 29));

        updateBtn.setBackground(new java.awt.Color(252, 252, 252));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        UserManagementVeiw.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 458, 160, 40));

        searchBtn.setBackground(new java.awt.Color(252, 252, 252));
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/search_icon.png"))); // NOI18N
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        UserManagementVeiw.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 36, 49, 38));

        searchTextField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        searchTextField.setToolTipText("Search By username");
        searchTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchTextField.setMargin(new java.awt.Insets(2, 5, 2, 2));
        UserManagementVeiw.add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 36, 217, 38));
        UserManagementVeiw.add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 220, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel11.setText("search by username");
        UserManagementVeiw.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        jPanel4.add(UserManagementVeiw, "card2");

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 670, 580));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/close_icon_primary.png"))); // NOI18N
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });
        getContentPane().add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void resetFields() {
        fnameTextField.setText("");
        lnameTextField.setText("");
        usernameTextField.setText("");
        usernameTextField.setEnabled(true);
        emailTextField.setText("");
        searchTextField.setText("");
        passwordTextField.setText("");
        passwordTextField.setEnabled(true);
        addRoles();
        this.roleComboBox.setEnabled(true);
        currentStaff = new Staff();
        currentMechanic = new Mechanic();
    }

    private void addRoles() {
        for (EUserRole role : EUserRole.values()) {
            roleComboBox.addItem(role.toString());
        }
    }

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        helperMethods.logout();
        dispose();
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void homeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeLabelMouseClicked
        // TODO add your handling code here:
        homeVeiw.setVisible(true);
        UserManagementVeiw.setVisible(false);
    }//GEN-LAST:event_homeLabelMouseClicked

    private void addUserLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserLabelMouseClicked
        homeVeiw.setVisible(false);
        UserManagementVeiw.setVisible(true);
    }//GEN-LAST:event_addUserLabelMouseClicked

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        view_data();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed

        try {
            String fname = fnameTextField.getText().trim();
            String lname = lnameTextField.getText().trim();
            String username = usernameTextField.getText().trim();
            String email = emailTextField.getText().trim();
            String phone = emailTextField.getText().trim();
            String password = passwordTextField.getText().trim();
            String role = "";
            for (EUserRole value : EUserRole.values()) {
                if (roleComboBox.getSelectedItem().equals(value.toString())) {
                    role = value.toString();
                }
            }
            if (fname.isEmpty() || lname.isEmpty() || username.isEmpty() || email.isEmpty()) {
                JOptionPane.showMessageDialog(
                        this,
                        "All Inputs are required",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
                return;
            }
            if (helperMethods.validateEmail(email)) {
                Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
                UsersService service = (UsersService) theRegistry.lookup("users");

                if (helperMethods.findStaff(username) != null || helperMethods.findMechanic(username) != null) {
                    JOptionPane.showMessageDialog(
                            this,
                            "A user with the provided username already exists",
                            "warning",
                            JOptionPane.WARNING_MESSAGE
                    );
                    return;
                }

                Users theUser = new Users();
                theUser.setFirstName(fname);
                theUser.setLastName(lname);
                theUser.setEmail(email);
                theUser.setPhone(phone);
                Users userObj = service.recordUser(theUser);
                Mechanic mechanicObj = new Mechanic();
                Staff staffObj = new Staff();

                if (userObj != null) {
                    if (role.equals("mechanic")) {
                        MechanicService mechanicService = (MechanicService) theRegistry.lookup("mechanic");
                        Mechanic theMechanic = new Mechanic();
                        theMechanic.setPassword(password);
                        theMechanic.setRole(EUserRole.mechanic);
                        theMechanic.setUsername(username);
                        theMechanic.setUsers(userObj);
                        theMechanic.setSpecialization("general");

                        mechanicObj = mechanicService.recordMechanic(theMechanic);
                        currentMechanic = mechanicObj;
                    } else {
                        StaffService staffService = (StaffService) theRegistry.lookup("staff");
                        Staff theStaff = new Staff();
                        theStaff.setPassword(password);
                        theStaff.setRole(
                                role.equals("admin") ? EUserRole.admin : EUserRole.cashier
                        );
                        theStaff.setUsername(username);
                        theStaff.setUsers(userObj);
                        staffObj = staffService.recordStaff(theStaff);
                        currentStaff = staffObj;
                    }
                    if (mechanicObj != null || staffObj != null) {
                        JOptionPane.showMessageDialog(this, "User Created Successfully");

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "User not Created");
                }
                view_data();
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "Invalid email address provided",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_createBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            String fname = fnameTextField.getText().trim();
            String lname = lnameTextField.getText().trim();
            String username = usernameTextField.getText().trim();
            String email = emailTextField.getText().trim();
            String phone = emailTextField.getText().trim();
            String password = passwordTextField.getText().trim();
            String role = "";
            for (EUserRole value : EUserRole.values()) {
                if (roleComboBox.getSelectedItem().equals(value.toString())) {
                    role = value.toString();
                }
            }
            if (fname.isEmpty() || lname.isEmpty() || username.isEmpty() || email.isEmpty()) {
                JOptionPane.showMessageDialog(
                        this,
                        "All Inputs are required (Make sure a user was selected)",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            } else {
                if (helperMethods.validateEmail(email)) {
                    Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
                    UsersService service = (UsersService) theRegistry.lookup("users");
                    Users theUser = new Users();
                    theUser.setId(this.edited_user_id);
                    theUser.setFirstName(fname);
                    theUser.setLastName(lname);
                    theUser.setEmail(email);
                    theUser.setPhone(phone);
                    Users userObj = service.updateUser(theUser);

                    if (userObj != null) {
                        JOptionPane.showMessageDialog(this, "User Updated Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "User not Updated");
                    }
                    view_data();
                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "Invalid email address provided",
                            "warning",
                            JOptionPane.WARNING_MESSAGE
                    );
                }

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        try {
            String role = "";
            for (EUserRole value : EUserRole.values()) {
                if (roleComboBox.getSelectedItem().equals(value.toString())) {
                    role = value.toString();
                }
            }
            if (this.currentStaff != null || this.currentMechanic != null) {
                Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);

                if (role.equals("mechanic")) {
                    MechanicService mechanicService = (MechanicService) theRegistry.lookup("mechanic");
                    Mechanic mechanicObj = mechanicService.deleteMechanic(this.currentMechanic);

                    if (mechanicObj != null) {
                        JOptionPane.showMessageDialog(this, "User Deleted Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "User not Deleted");
                    }
                } else {
                    StaffService staffService = (StaffService) theRegistry.lookup("staff");
                    Staff staffObj = staffService.deleteStaff(this.currentStaff);

                    if (staffObj != null) {
                        JOptionPane.showMessageDialog(this, "User Deleted Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "User not Deleted");
                    }
                }
                resetFields();
                view_data();
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "No User was selected",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        try {
            String searchText = searchTextField.getText().trim();
            Staff staffObj = helperMethods.findStaff(searchText);
            String fnameText = "", lnameText = "", usernameText = "", emailText = "", passwordText = "";
            EUserRole userRole;
            if (staffObj != null) {
                this.edited_user_id = staffObj.getUsers().getId();
                currentStaff = staffObj;
                fnameText = staffObj.getUsers().getFirstName();
                lnameText = staffObj.getUsers().getLastName();
                usernameText = staffObj.getUsername();
                emailText = staffObj.getUsers().getEmail();
                passwordText = staffObj.getPassword();
                userRole = staffObj.getRole();
            } else {
                Mechanic mechanicObj = helperMethods.findMechanic(searchText);
                if (mechanicObj != null) {
                    currentMechanic = mechanicObj;
                    this.edited_user_id = mechanicObj.getUsers().getId();
                    fnameText = mechanicObj.getUsers().getFirstName();
                    lnameText = mechanicObj.getUsers().getLastName();
                    usernameText = mechanicObj.getUsername();
                    emailText = mechanicObj.getUsers().getEmail();
                    passwordText = mechanicObj.getPassword();
                    userRole = mechanicObj.getRole();

                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "User with ID" + searchText + " Not Found",
                            "warning",
                            JOptionPane.WARNING_MESSAGE
                    );
                    return;
                }

            }
            fnameTextField.setText(fnameText);
            lnameTextField.setText(lnameText);
            usernameTextField.setText(usernameText);
            usernameTextField.setEnabled(false);
            emailTextField.setText(emailText);
            passwordTextField.setText(passwordText);
            passwordTextField.setEnabled(false);
            roleComboBox.setSelectedItem(userRole.toString());
            roleComboBox.setEnabled(false);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void resetFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFieldsActionPerformed
        resetFields();
    }//GEN-LAST:event_resetFieldsActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        // TODO add your handling code here:
        generatePdf();
    }//GEN-LAST:event_printBtnActionPerformed

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        resetFields();
        System.exit(0);
    }//GEN-LAST:event_closeBtnMouseClicked
    public void generatePdf() {
//        Runnable rows_add
        String path = "";
        JFileChooser jFile = new JFileChooser();
        jFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jFile.showSaveDialog(this);

        if (x == JFileChooser.APPROVE_OPTION) {
            path = jFile.getSelectedFile().getPath();
        }

        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + File.separator + "usersReport.pdf"));

            doc.open();
            PdfPTable tbl = new PdfPTable(6);
            tbl.addCell("Id");
            tbl.addCell("Username");
            tbl.addCell("First Name");
            tbl.addCell("Last Name");
            tbl.addCell("Email");
            tbl.addCell("Role");
            for (int i = 0; i < usersTable.getRowCount(); i++) {
                String Id = usersTable.getValueAt(i, 0).toString();
                String username = usersTable.getValueAt(i, 1).toString();
                String fname = usersTable.getValueAt(i, 2).toString();
                String lname = usersTable.getValueAt(i, 3).toString();
                String email = usersTable.getValueAt(i, 4).toString();
                String role = usersTable.getValueAt(i, 5).toString();
                tbl.addCell(Id);
                tbl.addCell(username);
                tbl.addCell(fname);
                tbl.addCell(lname);
                tbl.addCell(email);
                tbl.addCell(role);
            }
            doc.add(tbl);

        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            Logger.getLogger(AdminView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            ex.printStackTrace();
            Logger.getLogger(AdminView.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Report Successfully Saved");
        doc.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel UserManagementVeiw;
    private javax.swing.JLabel addUserLabel;
    private javax.swing.JLabel cashierLabel;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel fixedCarsLabel;
    private javax.swing.JTextField fnameTextField;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homeVeiw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel klsd;
    private javax.swing.JLabel klsd1;
    private javax.swing.JTextField lnameTextField;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JLabel mechanicLabel;
    private javax.swing.JLabel notFixedCarsLabel;
    private javax.swing.JLabel notFixedCarsLabel1;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton printBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton resetFields;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton updateBtn;
    private javax.swing.JLabel userCountLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTable usersTable;
    private javax.swing.JLabel waitingCarsLabel;
    private javax.swing.JLabel waitingCarsLabel1;
    // End of variables declaration//GEN-END:variables

    private void view_data() {
//        carsLabel.setText(String.valueOf(carsCount) + " " + "Users Worked on");

        try {
            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
            UsersService usersService = (UsersService) theRegistry.lookup("users");

            List<Users> allStaff = usersService.allStaffsList();
            List<Users> allMechanics = usersService.allMechanicsList();
            Iterator iterator = allStaff.iterator();
            DefaultTableModel tblModel = (DefaultTableModel) usersTable.getModel();
            tblModel.setRowCount(0);
            int usersCount = 0;
            int mechanicsCount = 0;
            int cashierCount = 0;
            if (allStaff != null) {
                for (Users tempUser : allStaff) {
                    String userId = String.valueOf(tempUser.getId());
                    String fname = tempUser.getFirstName();
                    String lname = tempUser.getLastName();
                    String email = tempUser.getEmail();
                    String username = tempUser.getStaff().getUsername();
                    String role = tempUser.getStaff().getRole().toString();
                    String tbData[] = {userId, username, fname, lname, email, role};
                    tblModel.addRow(tbData);
                    if (role.equals("cashier")) {
                        cashierCount++;
                    }
                    usersCount++;
                }

            }

            iterator = allMechanics.iterator();

            if (allMechanics != null) {
                for (Users tempUser : allMechanics) {
                    String userId2 = String.valueOf(tempUser.getId());
                    String fname2 = tempUser.getFirstName();
                    String lname2 = tempUser.getLastName();
                    String email2 = tempUser.getEmail();
                    String username2 = tempUser.getMechanic().getUsername();
                    String role2 = tempUser.getMechanic().getRole().toString();
                    String tbData[] = {userId2, username2, fname2, lname2, email2, role2};
                    tblModel.addRow(tbData);
                    usersCount++;
                    mechanicsCount++;
                }

            }
            userCountLabel.setText(String.valueOf(usersCount) + " " + "Users");
            cashierLabel.setText(String.valueOf(cashierCount));
            mechanicLabel.setText(String.valueOf(mechanicsCount));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

}
