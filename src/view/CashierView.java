/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import helpers.Helpers;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarFixStatus;
import model.Cars;
import model.Staff;
import model.Users;
import service.CarsService;
import service.UsersService;

/**
 *
 * @author busyDev
 */
public class CashierView extends javax.swing.JFrame {

    /**
     * Creates new form ModernDashboardLook
     */
    private Staff staff;

    public CashierView() {
        initComponents();
        view_data();
    }

    public CashierView(Staff staff) {
        this.staff = staff;
        initComponents();
        view_data();
        usernameLabel.setText(staff.getUsername());
    }

    Helpers helperMethods = new Helpers();
    private static Integer SERVER_PORT = 8000;
    Integer edited_car_id;
    Cars editedCar;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        homeLabel = new javax.swing.JLabel();
        addUserLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        homeVeiw = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        carsLabel = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carsTable = new javax.swing.JTable();
        printBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        fixedCarsLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        waitingCarsLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        notFixedCarsLabel = new javax.swing.JLabel();
        klsd = new javax.swing.JLabel();
        UserManagementVeiw = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        resetFields = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fNameTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        brandTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        yearTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        createBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        lNameTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        closeBtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("e-GARAGE");

        homeLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        homeLabel.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        homeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/home-light.png"))); // NOI18N
        homeLabel.setText("  Home");
        homeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeLabelMouseClicked(evt);
            }
        });

        addUserLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        addUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        addUserLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addUserLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/car_icon.png"))); // NOI18N
        addUserLabel.setText(" Manage Cars");
        addUserLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserLabelMouseClicked(evt);
            }
        });

        logoutLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/logout_icon.png"))); // NOI18N
        logoutLabel.setText("Logout");
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/logo.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/user_icon_2.png"))); // NOI18N

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameLabel.setText("null");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoutLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(homeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(homeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 670));

        jPanel4.setLayout(new java.awt.CardLayout());

        homeVeiw.setBackground(new java.awt.Color(245, 245, 245));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/car-mechanic.png"))); // NOI18N

        carsLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        carsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        carsLabel.setText("10 Cars ");

        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/refresh.png"))); // NOI18N
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        carsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Brand", "Model", "Year", "Owner Name", "Owner Email", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carsTable);
        if (carsTable.getColumnModel().getColumnCount() > 0) {
            carsTable.getColumnModel().getColumn(0).setResizable(false);
        }

        printBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/printing_icon.png"))); // NOI18N
        printBtn.setText("  Report");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 128, 128), 1, true));

        fixedCarsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        fixedCarsLabel.setForeground(new java.awt.Color(0, 128, 128));
        fixedCarsLabel.setText("10");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 128, 128));
        jLabel5.setText("Fixed");

        waitingCarsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        waitingCarsLabel.setForeground(new java.awt.Color(0, 96, 128));
        waitingCarsLabel.setText("10");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 96, 128));
        jLabel19.setText("Being Worked On");

        notFixedCarsLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        notFixedCarsLabel.setForeground(new java.awt.Color(128, 0, 32));
        notFixedCarsLabel.setText("10");

        klsd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        klsd.setForeground(new java.awt.Color(128, 0, 32));
        klsd.setText("Not Fixed");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(fixedCarsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(waitingCarsLabel)))
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notFixedCarsLabel)
                    .addComponent(klsd))
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(notFixedCarsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(klsd))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(waitingCarsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fixedCarsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout homeVeiwLayout = new javax.swing.GroupLayout(homeVeiw);
        homeVeiw.setLayout(homeVeiwLayout);
        homeVeiwLayout.setHorizontalGroup(
            homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeVeiwLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeVeiwLayout.createSequentialGroup()
                        .addComponent(refreshBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(homeVeiwLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel11))
                            .addComponent(carsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        homeVeiwLayout.setVerticalGroup(
            homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeVeiwLayout.createSequentialGroup()
                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(carsLabel))
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homeVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(homeVeiwLayout.createSequentialGroup()
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73))
        );

        jPanel4.add(homeVeiw, "card3");

        UserManagementVeiw.setBackground(new java.awt.Color(245, 245, 245));

        searchTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        searchBtn.setText("Search by ID");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        resetFields.setText("Reset Fields");
        resetFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFieldsActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Owner Details");

        jLabel4.setText("First Name");

        fNameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        emailTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Car Details");

        jLabel9.setText("Brand");

        brandTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Model");

        modelTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("Year");

        yearTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Fault  Description");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        descriptionTextArea.setRows(5);
        descriptionTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setViewportView(descriptionTextArea);

        createBtn.setText("Add Car");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(102, 102, 102));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        lNameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel14.setText("Last Name");

        jLabel17.setText("Email");

        javax.swing.GroupLayout UserManagementVeiwLayout = new javax.swing.GroupLayout(UserManagementVeiw);
        UserManagementVeiw.setLayout(UserManagementVeiwLayout);
        UserManagementVeiwLayout.setHorizontalGroup(
            UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                        .addComponent(resetFields)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserManagementVeiwLayout.createSequentialGroup()
                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UserManagementVeiwLayout.createSequentialGroup()
                                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserManagementVeiwLayout.createSequentialGroup()
                                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                                        .addComponent(jLabel14)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(lNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                                        .addComponent(jLabel4)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(15, 15, 15)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(197, 197, 197))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UserManagementVeiwLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchBtn)
                                .addGap(197, 197, 197)))
                        .addGap(38, 38, 38))))
            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(createBtn)
                .addGap(39, 39, 39)
                .addComponent(updateBtn)
                .addGap(36, 36, 36)
                .addComponent(deleteBtn)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        UserManagementVeiwLayout.setVerticalGroup(
            UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(54, 54, 54)
                .addComponent(resetFields)
                .addGap(18, 18, 18)
                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(15, 15, 15)
                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(UserManagementVeiwLayout.createSequentialGroup()
                        .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(lNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)))
                .addGap(13, 13, 13)
                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(statusLabel))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(UserManagementVeiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBtn)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jPanel4.add(UserManagementVeiw, "card2");

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 670, 580));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/close_icon_primary.png"))); // NOI18N
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });
        getContentPane().add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void resetFields() {
        fNameTextField.setText("");
        lNameTextField.setText("");
        emailTextField.setText("");
        modelTextField.setText("");
        brandTextField.setText("");
        yearTextField.setText("");
        descriptionTextArea.setText("");
        searchTextField.setText("");
        statusLabel.setText("");
        fNameTextField.setEnabled(true);
        lNameTextField.setEnabled(true);
        emailTextField.setEnabled(true);
        this.editedCar = null;
    }

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        helperMethods.logout();
        dispose();
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void homeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeLabelMouseClicked
        // TODO add your handling code here:
        homeVeiw.setVisible(true);
        UserManagementVeiw.setVisible(false);
    }//GEN-LAST:event_homeLabelMouseClicked

    private void addUserLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserLabelMouseClicked
        homeVeiw.setVisible(false);
        UserManagementVeiw.setVisible(true);
    }//GEN-LAST:event_addUserLabelMouseClicked

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        view_data();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        try {
            String searchText = searchTextField.getText().trim();
            Cars carObj = helperMethods.findCar(Integer.parseInt(searchText));
            if (carObj != null) {
                this.edited_car_id = carObj.getId();
                this.editedCar = carObj;
                fNameTextField.setText(carObj.getUsers().getFirstName());
                fNameTextField.setEnabled(false);
                lNameTextField.setText(carObj.getUsers().getLastName());
                lNameTextField.setEnabled(false);
                emailTextField.setText(carObj.getUsers().getEmail());
                emailTextField.setEnabled(false);
                modelTextField.setText(carObj.getModel());
                brandTextField.setText(carObj.getBrand());
                yearTextField.setText(carObj.getMakeYear());
                descriptionTextArea.setText(carObj.getFaultDescription());
                statusLabel.setText(carObj.getStatus().toString());
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "Car with ID" + searchText + " Not Found",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void resetFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFieldsActionPerformed
        resetFields();
    }//GEN-LAST:event_resetFieldsActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        try {
            String fname = fNameTextField.getText().trim();
            String lname = lNameTextField.getText().trim();
            String email = emailTextField.getText().trim();
            String carModel = modelTextField.getText().trim();
            String carBrand = brandTextField.getText().trim();
            String carYear = yearTextField.getText().trim();
            String carFault = descriptionTextArea.getText().trim();
            if (fname.isEmpty() || lname.isEmpty() || carYear.isEmpty()
                    || carModel.isEmpty() || carBrand.isEmpty() || carFault.isEmpty()) {
                JOptionPane.showMessageDialog(
                        this,
                        "All Inputs are required",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            } else {
                if (helperMethods.validateEmail(email)) {
                    Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
                    UsersService userService = (UsersService) theRegistry.lookup("users");

                    Users theUser = new Users();
                    theUser.setFirstName(fname);
                    theUser.setLastName(lname);
                    theUser.setEmail(email);
                    Users userObj = userService.recordUser(theUser);

                    if (userObj != null) {
                        CarsService service = (CarsService) theRegistry.lookup("cars");

                        Cars theCar = new Cars();
                        theCar.setBrand(carBrand);
                        theCar.setFaultDescription(carFault);
                        theCar.setMakeYear(carYear);
                        theCar.setModel(carModel);
                        theCar.setStatus(CarFixStatus.pending);
                        theCar.setUsers(userObj);
                        Cars carObj = service.recordCar(theCar);

                        if (carObj != null) {
                            JOptionPane.showMessageDialog(this, "Car Added Successfully");
                            this.editedCar = carObj;
                            view_data();

                        } else {
                            JOptionPane.showMessageDialog(this, "Car not Added");
                        }
                    } else {
                        JOptionPane.showMessageDialog(
                                this,
                                "Invalid email address provided",
                                "warning",
                                JOptionPane.WARNING_MESSAGE
                        );
                    }
                }

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_createBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            String fname = fNameTextField.getText().trim();
            String lname = lNameTextField.getText().trim();
            String email = emailTextField.getText().trim();
            String carModel = modelTextField.getText().trim();
            String carBrand = brandTextField.getText().trim();
            String carYear = yearTextField.getText().trim();
            String carFault = descriptionTextArea.getText().trim();
            if (fname.isEmpty() || lname.isEmpty() || carYear.isEmpty()
                    || carModel.isEmpty() || carBrand.isEmpty() || carFault.isEmpty()) {
                JOptionPane.showMessageDialog(
                        this,
                        "All Inputs are required(Make sure a car was selected)",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            } else {
                if (helperMethods.validateEmail(email)) {
                    Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
                    CarsService service = (CarsService) theRegistry.lookup("cars");

                    Cars theCar = this.editedCar;
                    theCar.setId(this.edited_car_id);
                    theCar.setBrand(carBrand);
                    theCar.setFaultDescription(carFault);
                    theCar.setMakeYear(carYear);
                    theCar.setModel(carModel);
                    Cars carObj = service.updateCar(theCar);

                    if (carObj != null) {
                        JOptionPane.showMessageDialog(this, "Car Updated Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "Car not Updated");
                    }
                    this.editedCar = carObj;
                    view_data();

                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "Invalid email address provided",
                            "warning",
                            JOptionPane.WARNING_MESSAGE
                    );
                }
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {

            if (this.editedCar != null) {
                Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
                CarsService service = (CarsService) theRegistry.lookup("cars");

                Cars carObj = service.deleteCar(this.editedCar);

                if (carObj != null) {
                    JOptionPane.showMessageDialog(this, "Car Deleted Successfully");
                } else {
                    JOptionPane.showMessageDialog(this, "Car not Deleted");
                }
                resetFields();
                view_data();
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "No Car was selected",
                        "warning",
                        JOptionPane.WARNING_MESSAGE
                );
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        // TODO add your handling code here:
        generatePdf();
    }//GEN-LAST:event_printBtnActionPerformed

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        resetFields();
        System.exit(0);
    }//GEN-LAST:event_closeBtnMouseClicked

    public void generatePdf() {
        String path = "";
        JFileChooser jFile = new JFileChooser();
        jFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jFile.showSaveDialog(this);

        if (x == JFileChooser.APPROVE_OPTION) {
            path = jFile.getSelectedFile().getPath();
        }

        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + File.separator + "carsReport.pdf"));

            doc.open();

            PdfPTable tbl = new PdfPTable(7);

            tbl.addCell("Id");
            tbl.addCell("Brand");
            tbl.addCell("Model");
            tbl.addCell("Year");
            tbl.addCell("Owner Name");
            tbl.addCell("Owner Email");
            tbl.addCell("Status");

            for (int i = 0; i < carsTable.getRowCount(); i++) {
                String Id = carsTable.getValueAt(i, 0).toString();
                String brand = carsTable.getValueAt(i, 1).toString();
                String model = carsTable.getValueAt(i, 2).toString();
                String year = carsTable.getValueAt(i, 3).toString();
                String ownerName = carsTable.getValueAt(i, 4).toString();
                String ownerEmail = carsTable.getValueAt(i, 5).toString();
                String status = carsTable.getValueAt(i, 6).toString();

                tbl.addCell(Id);
                tbl.addCell(brand);
                tbl.addCell(model);
                tbl.addCell(year);
                tbl.addCell(ownerName);
                tbl.addCell(ownerEmail);
                tbl.addCell(status);

            }
            doc.add(tbl);
            Font font = FontFactory.getFont(FontFactory.COURIER_OBLIQUE, 12, BaseColor.BLACK);

            Chunk chunk = new Chunk("Generated on: " + new Date(), font);
            doc.add(new Paragraph(chunk));

        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            Logger.getLogger(AdminView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            ex.printStackTrace();
            Logger.getLogger(AdminView.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Report Successfully Saved");
        doc.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel UserManagementVeiw;
    private javax.swing.JLabel addUserLabel;
    private javax.swing.JTextField brandTextField;
    private javax.swing.JLabel carsLabel;
    private javax.swing.JTable carsTable;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField fNameTextField;
    private javax.swing.JLabel fixedCarsLabel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homeVeiw;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel klsd;
    private javax.swing.JTextField lNameTextField;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JLabel notFixedCarsLabel;
    private javax.swing.JButton printBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton resetFields;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton updateBtn;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel waitingCarsLabel;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables

    private void view_data() {
        /* This methods syncs the display table's data with the database data */

        try {
            Registry theRegistry = LocateRegistry.getRegistry("127.0.0.1", SERVER_PORT);
            CarsService carsService = (CarsService) theRegistry.lookup("cars");

            List<Cars> allCars = carsService.allCarsList();
            Iterator iterator = allCars.iterator();
            DefaultTableModel tblModel = (DefaultTableModel) carsTable.getModel();
            tblModel.setRowCount(0);
            int carsCount = 0;
            int fixedCarsCount = 0;
            int waitingCarsCount = 0;
            int notFixedCarsCount = 0;
            if (allCars != null) {
                for (Cars tempCar : allCars) {
                    String carId = String.valueOf(tempCar.getId());
                    String brand = tempCar.getBrand();
                    String model = tempCar.getModel();
                    String year = tempCar.getMakeYear();
                    String ownerName = tempCar.getUsers().getFirstName() + " " + tempCar.getUsers().getLastName();
                    String ownerEmail = tempCar.getUsers().getEmail();

                    String status = tempCar.getStatus().toString();
                    String tbData[] = {carId, brand, model, year, ownerName, ownerEmail, status};
                    tblModel.addRow(tbData);
                    carsCount++;
                    if (status.equals("fixed")) {
                        fixedCarsCount++;
                    } else if (status.equals("failed")) {
                        notFixedCarsCount++;
                    } else {
                        waitingCarsCount++;
                    }
                }

            }
            carsLabel.setText(String.valueOf(carsCount) + " " + "Cars");
            fixedCarsLabel.setText(String.valueOf(fixedCarsCount));
            waitingCarsLabel.setText(String.valueOf(waitingCarsCount));
            notFixedCarsLabel.setText(String.valueOf(notFixedCarsCount));

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

}
